function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.handleNavStatus()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.protocol+"//"+window.location.host,s=t.replace(n,"");$(".nav li").each(function(t,n){var e=$(n),a=e.children("a").attr("href");if(a===s||-1!==s.indexOf(a)&&"/"!==a)return e.addClass("active"),!1})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left"),n="0";0===(t=parseInt(t))&&(n="-400px"),e.scrollWrapper.animate({left:n})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img_chptcha");t.click(function(){t.attr("src","/account/img_chptcha/?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=60;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,e=$(".signup-group input[name='telephone']");n.smsCaptcha.click(function(){var t=e.val();t?xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200===t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}}):messageBox.showInfo("请输入手机号码！")})},Auth.prototype.listenSigninEvent=function(){var t=$(".signin-group"),a=t.find("input[name='telephone']"),s=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=a.val(),n=s.val(),e=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){200===t.code&&(window.messageBox.showSuccess("登录成功！"),window.location.reload())}})})},Auth.prototype.listenSignupEvent=function(){var f=$(".signup-group");f.find(".submit-btn").click(function(t){t.preventDefault();var n=f.find("input[name='telephone']"),e=f.find("input[name='username']"),a=f.find("input[name='img_captcha']"),s=f.find("input[name='password1']"),o=f.find("input[name='password2']"),i=f.find("input[name='sms_captcha']"),c=n.val(),r=e.val(),p=a.val(),u=s.val(),l=o.val(),h=i.val();xfzajax.post({url:"/account/register/",data:{telephone:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){200===t.code&&window.location.reload()}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"分钟前"):3600<=a&&a<86400?(hours=parseInt(a/60/60),hours+"小时前"):86400<=a&&a<2592e3?(days=parseInt(a/60/60/24),days+"天前"):n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
